/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MevBriber } from "./MevBriber";

export class MevBriberFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MevBriber> {
    return super.deploy(overrides || {}) as Promise<MevBriber>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MevBriber {
    return super.attach(address) as MevBriber;
  }
  connect(signer: Signer): MevBriberFactory {
    return super.connect(signer) as MevBriberFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MevBriber {
    return new Contract(address, _abi, signerOrProvider) as MevBriber;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "briber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "miner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Bribed",
    type: "event",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "briberPermitted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_resultMatch",
        type: "bytes32",
      },
    ],
    name: "check32BytesAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_payloads",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "_resultMatches",
        type: "bytes32[]",
      },
    ],
    name: "check32BytesAndSendMulti",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_payloads",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "_resultMatches",
        type: "bytes32[]",
      },
    ],
    name: "check32BytesAndSendMultiWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_resultMatch",
        type: "bytes32",
      },
    ],
    name: "check32BytesAndSendWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_resultMatch",
        type: "bytes",
      },
    ],
    name: "checkBytesAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_payloads",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "_resultMatches",
        type: "bytes[]",
      },
    ],
    name: "checkBytesAndSendMulti",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_payloads",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "_resultMatches",
        type: "bytes[]",
      },
    ],
    name: "checkBytesAndSendMultiWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_resultMatch",
        type: "bytes",
      },
    ],
    name: "checkBytesAndSendWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604080518082018252600981526826a2ab213934b132b960b91b6020808301918252835180850190945260018452603160f81b908401528151902060c08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660e08190529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100a46100c3565b60a0526100b28184846100c7565b608052610100525061013492505050565b4690565b60008383836100d46100c3565b306040516020016100e9959493929190610108565b6040516020818303038152906040528051906020012090509392505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60805160a05160c05160e051610100516116136200017460003980610abf525080610b01525080610ae0525080610a66525080610a9652506116136000f3fe6080604052600436106100ab5760003560e01c806386b738be1161006457806386b738be1461016a5780639af96d7e1461017d578063aaa89be414610190578063ad5c4648146101b0578063d8a8289c146101d2578063dca1684f146101f2576100b2565b8063047a9699146100b757806324835805146100d957806330adf81f146100ec578063319f6701146101175780633676290c146101375780637ecebe001461014a576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100d76100d2366004610e64565b610212565b005b6100d76100e736600461111f565b6103a8565b3480156100f857600080fd5b506101016103e5565b60405161010e919061131c565b60405180910390f35b34801561012357600080fd5b506100d7610132366004610ffd565b610409565b6100d761014536600461120a565b6104c8565b34801561015657600080fd5b50610101610165366004610d2a565b610534565b6100d76101783660046110ca565b61055d565b6100d761018b366004611190565b610568565b34801561019c57600080fd5b506100d76101ab366004610f30565b6105dc565b3480156101bc57600080fd5b506101c561062a565b60405161010e91906113a3565b3480156101de57600080fd5b506100d76101ed366004610db4565b610642565b3480156101fe57600080fd5b506100d761020d366004610d4b565b61065c565b6102218a8a8a8a8a8a8a61065c565b61022c8383836107a8565b6040516323b872dd60e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2906323b872dd90610267908d9030908d906004016112f8565b602060405180830381600087803b15801561028157600080fd5b505af1158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190611284565b50604051632e1a7d4d60e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d906102f1908b9060040161131c565b600060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b50506040514192508a156108fc0291508a906000818181858888f19350505050158015610350573d6000803e3d6000fd5b50416001600160a01b03168a6001600160a01b03167f612cc088ab7949b66218be265950be04e5e93a77a1d888bb905d37e5705f19aa8a604051610394919061131c565b60405180910390a350505050505050505050565b6103b38383836107a8565b60405141903480156108fc02916000818181858888f193505050501580156103df573d6000803e3d6000fd5b50505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b815183511461041757600080fd5b805183511461042557600080fd5b6104348a8a8a8a8a8a8a61065c565b60005b835181101561048c5761048484828151811061044f57fe5b602002602001015184838151811061046357fe5b602002602001015184848151811061047757fe5b60200260200101516107a8565b600101610437565b506040516323b872dd60e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2906323b872dd90610267908d9030908d906004016112f8565b81518351146104d657600080fd5b80518351146104e457600080fd5b60005b8351811015610507576104ff84828151811061044f57fe5b6001016104e7565b5060405141903480156108fc02916000818181858888f193505050501580156103df573d6000803e3d6000fd5b6001600160a01b03811660009081526020819052604081206105559061085a565b90505b919050565b6103b383838361085e565b815183511461057657600080fd5b805183511461058457600080fd5b60005b8351811015610507576105d484828151811061059f57fe5b60200260200101518483815181106105b357fe5b60200260200101518484815181106105c757fe5b602002602001015161085e565b600101610587565b81518351146105ea57600080fd5b80518351146105f857600080fd5b6106078a8a8a8a8a8a8a61065c565b60005b835181101561048c5761062284828151811061059f57fe5b60010161060a565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6106518a8a8a8a8a8a8a61065c565b61022c83838361085e565b834211156106855760405162461bcd60e51b815260040161067c90611450565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106d76000808e6001600160a01b03166001600160a01b0316815260200190815260200160002061085a565b896040516020016106ed96959493929190611325565b60405160208183030381529060405280519060200120905060006107108261092a565b9050600061072082878787610963565b9050896001600160a01b0316816001600160a01b0316146107535760405162461bcd60e51b815260040161067c9061152d565b6001600160a01b038916301461077b5760405162461bcd60e51b815260040161067c9061152d565b6001600160a01b038a16600090815260208190526040902061079c90610a59565b50505050505050505050565b60006060846001600160a01b0316846040516107c491906112a4565b600060405180830381855afa9150503d80600081146107ff576040519150601f19603f3d011682016040523d82523d6000602084013e610804565b606091505b5091509150816108265760405162461bcd60e51b815260040161067c906114c9565b80805190602001208380519060200120146108535760405162461bcd60e51b815260040161067c90611564565b5050505050565b5490565b60006060846001600160a01b03168460405161087a91906112a4565b600060405180830381855afa9150503d80600081146108b5576040519150601f19603f3d011682016040523d82523d6000602084013e6108ba565b606091505b5091509150816108dc5760405162461bcd60e51b815260040161067c906114c9565b6020815110156108fe5760405162461bcd60e51b815260040161067c906113ee565b60208101518381146109225760405162461bcd60e51b815260040161067c90611425565b505050505050565b6000610934610a62565b826040516020016109469291906112dd565b604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156109a55760405162461bcd60e51b815260040161067c90611487565b8360ff16601b14806109ba57508360ff16601c145b6109d65760405162461bcd60e51b815260040161067c906114eb565b6000600186868686604051600081526020016040526040516109fb9493929190611385565b6020604051602081039080840390855afa158015610a1d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610a505760405162461bcd60e51b815260040161067c906113b7565b95945050505050565b80546001019055565b60007f0000000000000000000000000000000000000000000000000000000000000000610a8d610b2b565b1415610aba57507f0000000000000000000000000000000000000000000000000000000000000000610b28565b610b257f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610b2f565b90505b90565b4690565b6000838383610b3c610b2b565b30604051602001610b51959493929190611359565b6040516020818303038152906040528051906020012090509392505050565b80356001600160a01b038116811461055857600080fd5b600082601f830112610b97578081fd5b8135610baa610ba5826115bf565b61159b565b818152915060208083019084810181840286018201871015610bcb57600080fd5b60005b84811015610bf157610bdf82610b70565b84529282019290820190600101610bce565b505050505092915050565b600082601f830112610c0c578081fd5b8135610c1a610ba5826115bf565b818152915060208083019084810181840286018201871015610c3b57600080fd5b60005b84811015610bf157813584529282019290820190600101610c3e565b600082601f830112610c6a578081fd5b8135610c78610ba5826115bf565b818152915060208083019084810160005b84811015610bf157610ca0888484358a0101610cb2565b84529282019290820190600101610c89565b600082601f830112610cc2578081fd5b813567ffffffffffffffff811115610cd657fe5b610ce9601f8201601f191660200161159b565b9150808252836020828501011115610d0057600080fd5b8060208401602084013760009082016020015292915050565b803560ff8116811461055857600080fd5b600060208284031215610d3b578081fd5b610d4482610b70565b9392505050565b600080600080600080600060e0888a031215610d65578283fd5b610d6e88610b70565b9650610d7c60208901610b70565b95506040880135945060608801359350610d9860808901610d19565b925060a0880135915060c0880135905092959891949750929550565b6000806000806000806000806000806101408b8d031215610dd3578283fd5b610ddc8b610b70565b9950610dea60208c01610b70565b985060408b0135975060608b01359650610e0660808c01610d19565b955060a08b0135945060c08b01359350610e2260e08c01610b70565b92506101008b013567ffffffffffffffff811115610e3e578283fd5b610e4a8d828e01610cb2565b9250506101208b013590509295989b9194979a5092959850565b6000806000806000806000806000806101408b8d031215610e83578586fd5b610e8c8b610b70565b9950610e9a60208c01610b70565b985060408b0135975060608b01359650610eb660808c01610d19565b955060a08b0135945060c08b01359350610ed260e08c01610b70565b92506101008b013567ffffffffffffffff80821115610eef578384fd5b610efb8e838f01610cb2565b93506101208d0135915080821115610f11578283fd5b50610f1e8d828e01610cb2565b9150509295989b9194979a5092959850565b6000806000806000806000806000806101408b8d031215610f4f578586fd5b610f588b610b70565b9950610f6660208c01610b70565b985060408b0135975060608b01359650610f8260808c01610d19565b955060a08b0135945060c08b0135935060e08b013567ffffffffffffffff80821115610fac578485fd5b610fb88e838f01610b87565b94506101008d0135915080821115610fce578384fd5b610fda8e838f01610c5a565b93506101208d0135915080821115610ff0578283fd5b50610f1e8d828e01610bfc565b6000806000806000806000806000806101408b8d03121561101c578384fd5b6110258b610b70565b995061103360208c01610b70565b985060408b0135975060608b0135965061104f60808c01610d19565b955060a08b0135945060c08b0135935060e08b013567ffffffffffffffff80821115611079578485fd5b6110858e838f01610b87565b94506101008d013591508082111561109b578384fd5b6110a78e838f01610c5a565b93506101208d01359150808211156110bd578283fd5b50610f1e8d828e01610c5a565b6000806000606084860312156110de578081fd5b6110e784610b70565b9250602084013567ffffffffffffffff811115611102578182fd5b61110e86828701610cb2565b925050604084013590509250925092565b600080600060608486031215611133578081fd5b61113c84610b70565b9250602084013567ffffffffffffffff80821115611158578283fd5b61116487838801610cb2565b93506040860135915080821115611179578283fd5b5061118686828701610cb2565b9150509250925092565b6000806000606084860312156111a4578081fd5b833567ffffffffffffffff808211156111bb578283fd5b6111c787838801610b87565b945060208601359150808211156111dc578283fd5b6111e887838801610c5a565b935060408601359150808211156111fd578283fd5b5061118686828701610bfc565b60008060006060848603121561121e578081fd5b833567ffffffffffffffff80821115611235578283fd5b61124187838801610b87565b94506020860135915080821115611256578283fd5b61126287838801610c5a565b93506040860135915080821115611277578283fd5b5061118686828701610c5a565b600060208284031215611295578081fd5b81518015158114610d44578182fd5b60008251815b818110156112c457602081860181015185830152016112aa565b818111156112d25782828501525b509190910192915050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0391909116815260200190565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b6020808252601b908201527f726573706f6e7365206c657373207468616e2033322062797465730000000000604082015260600190565b6020808252601190820152700e4cae6e0dedce6ca40dad2e6dac2e8c6d607b1b604082015260600190565b6020808252601d908201527f45524332305065726d69743a206578706972656420646561646c696e65000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604082015261756560f01b606082015260800190565b602080825260089082015267217375636365737360c01b604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604082015261756560f01b606082015260800190565b6020808252601e908201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604082015260600190565b60208082526017908201527f726573706f6e7365206279746573206d69736d61746368000000000000000000604082015260600190565b60405181810167ffffffffffffffff811182821017156115b757fe5b604052919050565b600067ffffffffffffffff8211156115d357fe5b506020908102019056fea2646970667358221220ea2efbe5bd187d01969cbed1c38f253383f548774f3dc8516893c7071803b3fd64736f6c63430007030033";
